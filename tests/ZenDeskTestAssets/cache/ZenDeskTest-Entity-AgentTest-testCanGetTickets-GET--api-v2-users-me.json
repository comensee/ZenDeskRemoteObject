Server: nginx
Date: Thu, 26 Jun 2014 09:21:03 GMT
Content-Type: application/json; charset=UTF-8
Connection: close
Cache-Control: must-revalidate, private, max-age=0
Status: 200 OK
X-Zendesk-API-Version: v2
X-Frame-Options: SAMEORIGIN
X-Zendesk-Origin-Server: app9.pod3.dub1.zdsys.com
X-UA-Compatible: IE=Edge,chrome=1
ETag: W/"9d1f79d4fa39cd3dae7e6b51f08457ed"
X-Zendesk-User-Id: 513218931
X-Request-Id: 2974d14da21e0a9f7836da56aa1c77a8
X-Runtime: 0.061971
X-Rack-Cache: miss
X-Zendesk-Request-Id: c07e4e2d683919d42ba6
X-Content-Type-Options: nosniff
@@@@@{"user":{"id":513218931,"url":"https://propertytrackr1403773561.zendesk.com/api/v2/users/513218931.json","name":"Jonathan Lahyani","email":"vincent@propertyfinder.ae","created_at":"2014-06-26T09:06:06Z","updated_at":"2014-06-26T09:06:06Z","time_zone":"Athens","phone":null,"photo":null,"locale_id":1,"locale":"en-US","organization_id":30565591,"role":"admin","verified":true,"external_id":null,"tags":[],"alias":null,"active":true,"shared":false,"shared_agent":false,"last_login_at":"2014-06-26T09:04:07Z","signature":null,"details":null,"notes":null,"custom_role_id":null,"moderator":true,"ticket_restriction":null,"only_private_comments":false,"restricted_agent":false,"suspended":false,"authenticity_token":"oDM0fw8T20XfKxD5QJixIFLkkGpJwuLn/1IBAbZJouw=","user_fields":{"unit_tests":null}}}