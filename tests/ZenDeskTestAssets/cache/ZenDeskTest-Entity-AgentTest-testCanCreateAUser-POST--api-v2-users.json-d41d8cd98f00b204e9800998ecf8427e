Server: nginx
Date: Thu, 26 Jun 2014 09:20:59 GMT
Content-Type: application/json; charset=UTF-8
Content-Length: 727
Connection: close
Cache-Control: max-age=0, private, must-revalidate
Status: 201 Created
X-Zendesk-API-Version: v2
X-Frame-Options: SAMEORIGIN
Location: https://propertytrackr1403773561.zendesk.com/api/v2/users/513224671.json
X-Zendesk-Origin-Server: app5.pod3.dub1.zdsys.com
X-UA-Compatible: IE=Edge,chrome=1
ETag: W/"9d78ea8f15dd5ad911488846043df11d"
X-Zendesk-User-Id: 513218931
X-Request-Id: 56447ad76d0c4f8c30f89823ae09a7a8
X-Runtime: 0.281130
X-Rack-Cache: invalidate, pass
X-Zendesk-Request-Id: 3af7115f7cd41dc4ffe4
X-Content-Type-Options: nosniff
@@@@@{"user":{"id":513224671,"url":"https://propertytrackr1403773561.zendesk.com/api/v2/users/513224671.json","name":"Vince53abe5f95df8f","email":"blanchon.vincent+zd-tests53abe5f95df8f@gmail.com","created_at":"2014-06-26T09:20:59Z","updated_at":"2014-06-26T09:20:59Z","time_zone":"Athens","phone":null,"photo":null,"locale_id":1,"locale":"en-US","organization_id":null,"role":"agent","verified":false,"external_id":null,"tags":[],"alias":"","active":true,"shared":false,"shared_agent":false,"last_login_at":null,"signature":null,"details":null,"notes":null,"custom_role_id":null,"moderator":false,"ticket_restriction":null,"only_private_comments":false,"restricted_agent":false,"suspended":false,"user_fields":{"unit_tests":null}}}