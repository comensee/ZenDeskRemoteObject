Server: nginx/1.4.4
Date: Sun, 23 Mar 2014 22:57:27 GMT
Content-Type: application/json; charset=UTF-8
Connection: close
Status: 200 OK
X-Zendesk-API-Version: v2
X-Frame-Options: SAMEORIGIN
X-Zendesk-Origin-Server: app7.pod2.sac1.zdsys.com
X-UA-Compatible: IE=Edge,chrome=1
ETag: W/"6947a7e3bc7299900cd0974274a43fef"
Cache-Control: max-age=0, private, must-revalidate
X-Zendesk-User-Id: 319156414
X-Request-Id: d5545134919f1742576ed9373a7bb070
X-Runtime: 0.246987
X-Rack-Cache: invalidate, pass
X-Zendesk-Request-Id: 9c0b80e8ff656dfebee9
X-Content-Type-Options: nosniff
@@@@@{"user":{"id":355227274,"url":"https://4mationtechnologiesci1392699043.zendesk.com/api/v2/users/355227274.json","name":"Vincent532f669f857b0new","email":"blanchon.vincent+zd-tests532f669f857b0@gmail.com","created_at":"2014-03-23T22:57:25Z","updated_at":"2014-03-23T22:57:27Z","time_zone":"New Caledonia","phone":null,"photo":null,"locale_id":1,"locale":"en-US","organization_id":null,"role":"end-user","verified":false,"split_testing_group_names":["getting-started-A"],"external_id":null,"tags":[],"alias":null,"active":true,"shared":false,"shared_agent":false,"last_login_at":null,"signature":null,"details":null,"notes":null,"custom_role_id":null,"moderator":false,"ticket_restriction":"requested","only_private_comments":false,"restricted_agent":true,"suspended":true,"user_fields":{"sample_for_unit_tests":null}}}